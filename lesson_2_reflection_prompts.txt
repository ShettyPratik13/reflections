What happens when you initialize a repository? Why do you need to do it?

-When we initialize a repository, it's .git hidden file is created. It is needed to create your own repository.


How is the staging area different from the working directory and the repository?
 What value do you think it offers?

-The staging area is a place to add your files before you commit them. You can even remove them using 'git reset'.


How can you use the staging area to make sure you have one commit per logical
change?

-The staging area ensures you can commit changes across files. A logical change could have changes across multiple files.


What are some situations when branches would be helpful in keeping your history
 organized? How would branches help?

-In case you wan to build an experimental feature, branching keeps the main branch untouched and it helps keep your history organized.


How do the diagrams help you visualize the branch structure?

-Diagrams help visualize the branch structure as it difficult to remember which branch was created where and which one is checked out.


What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

-Merging branches helps us incorporate the changes in the other branch into the master branch. It is represented as such as the changes in both are merged.


What are the pros and cons of Git’s automatic merging vs. always doing merges
 manually?

-Git cannot merge content when the same content is modified by two people. This conflict has to be resolved manually.